[workspace]
resolver = "2"

[workspace.package]
repository = "https://github.com/rust-cli/config-rs"
license = "MIT OR Apache-2.0"
edition = "2018"
rust-version = "1.75.0"  # MSRV
include = [
  "build.rs",
  "src/**/*",
  "Cargo.toml",
  "Cargo.lock",
  "LICENSE*",
  "README.md",
  "examples/**/*"
]

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
unnameable_types = "warn"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
bool_assert_comparison = "allow"
branches_sharing_code = "allow"
checked_conversions = "warn"
collapsible_else_if = "allow"
create_dir = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
doc_markdown = "warn"
empty_enum = "warn"
enum_glob_use = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
from_iter_instead_of_collect = "warn"
if_same_then_else = "allow"
implicit_clone = "warn"
imprecise_flops = "warn"
inconsistent_struct_constructor = "warn"
inefficient_to_string = "warn"
infinite_loop = "warn"
invalid_upcast_comparisons = "warn"
large_digit_groups = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_and_return = "allow"  # sometimes good to name what you are returning
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
mem_forget = "warn"
mutex_integer = "warn"
needless_continue = "allow"
needless_for_each = "warn"
negative_feature_names = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
rc_mutex = "warn"
redundant_feature_names = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
result_large_err = "allow"
same_functions_in_if_condition = "warn"
self_named_module_files = "warn"
semicolon_if_nothing_returned = "warn"
str_to_string = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_to_string = "warn"
todo = "warn"
trait_duplication_in_bounds = "warn"
uninlined_format_args = "warn"
verbose_file_reads = "warn"
wildcard_imports = "warn"
zero_sized_map_values = "warn"

[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
# debug = "line-tables-only"  # requires Cargo 1.71

[package]
name = "config"
version = "0.15.18"
description = "Layered configuration system for Rust applications."
categories = ["config"]
keywords = ["config", "configuration", "settings", "env", "environment"]
repository.workspace = true
license.workspace = true
edition.workspace = true
rust-version.workspace = true
include.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--generate-link-to-definition"]

[package.metadata.release]
pre-release-replacements = [
  {file="CHANGELOG.md", search="Unreleased", replace="{{version}}", min=1},
  {file="CHANGELOG.md", search="\\.\\.\\.HEAD", replace="...{{tag_name}}", exactly=1},
  {file="CHANGELOG.md", search="ReleaseDate", replace="{{date}}", min=1},
  {file="CHANGELOG.md", search="<!-- next-header -->", replace="<!-- next-header -->\n## [Unreleased] - ReleaseDate\n", exactly=1},
  {file="CHANGELOG.md", search="<!-- next-url -->", replace="<!-- next-url -->\n[Unreleased]: https://github.com/rust-cli/config-rs/compare/{{tag_name}}...HEAD", exactly=1},
]

[features]
default = ["toml", "json", "yaml", "ini", "ron", "json5", "convert-case", "async"]
json = ["serde_json"]
yaml = ["yaml-rust2"]
ini = ["rust-ini"]
json5 = ["json5_rs", "dep:serde-untagged"]
corn = ["dep:corn"]
convert-case = ["convert_case"]
preserve_order = ["indexmap", "toml?/preserve_order", "serde_json?/preserve_order", "ron?/indexmap"]
async = ["async-trait"]
toml = ["dep:toml"]

[dependencies]
serde_core = "1.0.228"

async-trait = { version = "0.1.89", optional = true }
toml = { version = "0.9.6", optional = true, default-features = false, features = ["parse", "serde"] }
serde_json = { version = "1.0.145", optional = true }
yaml-rust2 = { version = "0.10.4", optional = true }
rust-ini = { version = "0.21.3", optional = true }
ron = { version = "0.11.0", optional = true }
json5_rs = { version = "0.4.1", optional = true, package = "json5" }
corn = { version = "0.10.0", optional = true, package = "libcorn" }
indexmap = { version = "2.11.4", features = ["serde"], optional = true }
convert_case = { version = "0.6.0", optional = true }
pathdiff = "0.2.3"
winnow = "0.7.13"
serde-untagged = { version = "0.1.9", optional = true }

[dev-dependencies]
serde = { version = "1.0.228", features = ["derive"] }
float-cmp = "0.10.0"
chrono = { version = "0.4.42", features = ["serde"] }
tokio = { version = "1.47.1", features = ["rt-multi-thread", "macros", "fs", "io-util", "time"]}
warp = { version = "0.4.2", features = ["server"] }
futures = "0.3.31"
reqwest = { version = "0.12.23", default-features = false }

glob = "0.3.3"
notify = "7.0.0"
temp-env = "0.3.6"
log = { version = "0.4.28", features = ["serde"] }
snapbox = "0.6.21"

[[example]]
name = "async_source"
required-features = ["json", "async"]

[lints]
workspace = true
